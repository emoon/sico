#
# Uncrustify Configuration File
#

# Alignment
# ---------

## Alignment

# Align on tabstop
align_on_tabstop                        = false         # boolean (false/true)

# Align variable definitions
align_func_params                       = true          # boolean (false/true)

# Align with tabs
align_with_tabs                         = false         # boolean (false/true)

# Keep non-indenting tabs
align_keep_tabs                         = false         # boolean (false/true)

## Alignment Span

# Alignment span for struct/union
align_var_struct_span                   = 0             # number

# Alignment span for variable definitions
align_var_def_span                      = 0             # number

align_enum_equ_span						= 1

## Alignment Style

# Alignment style for ampersand in variable definitions
align_var_def_amp_style                 = 0             # number

# Alignment style for star in variable definitions
align_var_def_star_style                = 0             # number

align_var_def_inline					= true

align_right_cmt_span					= 1

cmt_insert_func_header					= scripts/comment.txt 

# Code-Modifying
# --------------

## Other

# Move break in fully-braced case before close brace
mod_move_case_break                     = false         # boolean (false/true)

# Remove empty return as last statement in function
mod_remove_empty_return                 = false         # boolean (false/true)

## Parentheses

# Add parentheses on while and if statements around bool
mod_full_paren_if_bool                  = false         # boolean (false/true)

## Semicolons

# Change optional semicolons to real semicolons
mod_pawn_semicolon                      = false         # boolean (false/true)

# Remove superflous semicolons
mod_remove_extra_semicolon              = true          # boolean (false/true)

## Sorting

# Sort consecutive import statements
mod_sort_import                         = false         # boolean (false/true)

# Sort include statements
mod_sort_include                        = false         # boolean (false/true)

# Sort using statements
mod_sort_using                          = false         # boolean (false/true)

# General
# -------

## Other

# Input tab size
input_tab_size                          = 4             # number

# Interpret >=
tok_split_gte                           = true          # boolean (false/true)

# Newline character
newlines                                = auto          # string (auto/cr/crlf/lf)

# Output tab size
output_tab_size                         = 4             # number

# Indentation
# -----------

## Indentation

# Indent class body
indent_class                            = true          # boolean (false/true)

## Indentation Size

# Indentation column size
indent_columns                          = 4             # number

# Indentation size between case and switch
indent_switch_case                      = 4             # number

## Other

# Brace indent level
indent_brace                            = 0             # number

# Indent access specifier
indent_access_spec                      = -4            # number

# Indent after class colon
indent_class_colon                      = true          # boolean (false/true)

# Indent comments with tabs
indent_cmt_with_tabs                    = false         # boolean (false/true)

# Indent extern body
indent_extern                           = true          # boolean (false/true)

# Indent goto labels
indent_label                            = 0             # number

# Indent namespace body
indent_namespace                        = false         # boolean (false/true)

# Indent with tabs
indent_with_tabs                        = 0             # number

# Indentation for constructor initializer list
indent_ctor_init                        = 0             # number

# Virtual indent from colon for member initializers
indent_ctor_init_leading                = 0             # number

# Newlines
# --------

## Newline After

# Newline after case statement
nl_after_case                           = true          # boolean (false/true)

# Newline after do
nl_after_do                             = add           # string (add/force/ignore/remove)

# Newline after virtual brace close
nl_after_vbrace_close                   = true          # boolean (false/true)

## Newline Between

# Newline between catch and open brace
nl_catch_brace                          = add           # string (add/force/ignore/remove)

# Newline between class and open brace
nl_class_brace                          = add           # string (add/force/ignore/remove)

# Newline between close brace and catch
nl_brace_catch                          = add           # string (add/force/ignore/remove)

# Newline between close brace and else
nl_brace_else                           = add           # string (add/force/ignore/remove)

# Newline between close brace and while
nl_brace_while                          = remove        # string (add/force/ignore/remove)

# Newline between do and open brace
nl_do_brace                             = add           # string (add/force/ignore/remove)

# Newline between else and open brace
nl_else_brace                           = add           # string (add/force/ignore/remove)

# Newline between else if and open brace
nl_elseif_brace                         = add           # string (add/force/ignore/remove)

# Newline between enum and open brace
nl_enum_brace                           = add           # string (add/force/ignore/remove)

# Newline between for and open brace
nl_for_brace                            = add           # string (add/force/ignore/remove)

# Newline between if and open brace
nl_if_brace                             = add           # string (add/force/ignore/remove)

# Newline between namespace and open brace
nl_namespace_brace                      = add           # string (add/force/ignore/remove)

# Newline between struct and open brace
nl_struct_brace                         = add           # string (add/force/ignore/remove)

# Newline between switch and open brace
nl_switch_brace                         = add           # string (add/force/ignore/remove)

# Newline between try and open brace
nl_try_brace                            = add           # string (add/force/ignore/remove)

# Newline between union and open brace
nl_union_brace                          = ignore        # string (add/force/ignore/remove)

# Newline between while and open brace
nl_while_brace                          = add           # string (add/force/ignore/remove)

nl_getset_leave_one_liners				= true			# boolean (false/true)

nl_func_leave_one_liners				= true			# boolean (false/true)

nl_if_leave_one_liners					= true			# boolean (false/true)

## Other

# Newline around class colon
nl_class_colon                          = ignore        # string (add/force/ignore/remove)

# Positioning
# -----------

## Constructor

# Position of colon after constructor
pos_class_colon                         = lead          # string (ignore/lead/trail)

# Position of comma in constructor
pos_class_comma                         = lead          # string (ignore/lead/trail)

# Spacing
# -------

## Space After

# Space after C++ comment opening
sp_cmt_cpp_start                        = ignore        # string (add/force/ignore/remove)

# Space after capture specification
sp_cpp_lambda_paren                     = remove        # string (add/force/ignore/remove)

# Space after cast
sp_after_cast                           = remove        # string (add/force/ignore/remove)

# Space after class colon
sp_after_class_colon                    = add           # string (add/force/ignore/remove)

# Space after comma
sp_after_comma                          = add           # string (add/force/ignore/remove)

# Space after final semicolon in empty for statement
sp_after_semi_for_empty                 = remove        # string (add/force/ignore/remove)

# Space after operator
sp_after_operator                       = remove        # string (add/force/ignore/remove)

# Space after operator and open parenthesis
sp_after_operator_sym                   = remove        # string (add/force/ignore/remove)

# Space after pointer star
sp_after_ptr_star                       = add           # string (add/force/ignore/remove)

# Space after pointer star followed by function
sp_after_ptr_star_func                  = add           # string (add/force/ignore/remove)

# Space after reference sign
sp_after_byref                          = add           # string (add/force/ignore/remove)

## Space Around

# Space around arithmetic operators
sp_arith                                = add           # string (add/force/ignore/remove)

# Space around assignment equals in enum
sp_enum_assign                          = add           # string (add/force/ignore/remove)

# Space around assignment in lambda capture specification
sp_cpp_lambda_assign                    = remove        # string (add/force/ignore/remove)

# Space around assignment operator
sp_assign                               = add           # string (add/force/ignore/remove)

# Space around assignment operator in prototype
sp_assign_default                       = add           # string (add/force/ignore/remove)

# Space around boolean operators
sp_bool                                 = add           # string (add/force/ignore/remove)

## Space Before

# Space before case colon
sp_before_case_colon                    = remove        # string (add/force/ignore/remove)

# Space before comma
sp_before_comma                         = remove        # string (add/force/ignore/remove)

# Space before if/for/switch/while open parenthesis
sp_before_sparen                        = add           # string (add/force/ignore/remove)

# Space before pointer star
sp_before_ptr_star                      = remove        # string (add/force/ignore/remove)

# Space before pointer star followed by function
sp_before_ptr_star_func                 = remove        # string (add/force/ignore/remove)

# Space before reference sign
sp_before_byref                         = remove        # string (add/force/ignore/remove)

# Space before unnamed pointer star
sp_before_unnamed_ptr_star              = remove        # string (add/force/ignore/remove)

## Space Between

# Space between double angle brackets
sp_angle_shift                          = remove        # string (add/force/ignore/remove)

# Space between double angle brackets
sp_permit_cpp11_shift                   = true          # boolean (false/true)

# Space between open parenthesis and comma
sp_paren_comma                          = force         # string (add/force/ignore/remove)

# Space between pointer stars
sp_between_ptr_star                     = remove        # string (add/force/ignore/remove)

# Space between type and open parenthesis in C++ cast
sp_cpp_cast_paren                       = remove        # string (add/force/ignore/remove)

## Space Inside

# Space inside parentheses
sp_inside_paren                         = remove        # string (add/force/ignore/remove)
